name: CI

on:
  push:
    branches: [main]

jobs:
  draft-release:
    name: Prepare next version
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    outputs:
      version: ${{ steps.semver.outputs.version }}
      version-major: ${{ steps.semver.outputs.version-major-only }}
      version-minor: ${{ format('{0}.{1}', steps.semver.outputs.version-major-only, steps.semver.outputs.version-minor-only) }}
      version-patch: ${{ format('{0}.{1}.{2}', steps.semver.outputs.version-major-only, steps.semver.outputs.version-minor-only, steps.semver.outputs.version-patch-only) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate next version
        id: semver
        uses: conventional-actions/next-version@v1
      - name: Create Draft Release
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          draft: false
          allowUpdates: true
          commit: ${{ github.sha }}
          tag: ${{ steps.semver.outputs.version }}
          name: ${{ steps.semver.outputs.version }}
          body: "*pending*"
          token: ${{ env.GITHUB_TOKEN }}

  build-push-go:
    name: Build go
    runs-on: ubuntu-latest
    needs:
      - draft-release
    strategy:
      matrix:
        images:
          - localRegistry: localhost:5000/ketch-com/ketch-event-forwarder
            githubRegistry: ghcr.io/ketch-com/ketch-event-forwarder
            # ecrRepository: ketch-event-forwarder
            dockerfile: docker/ketch-event-forwarder/Dockerfile
      fail-fast: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v4
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-west-2
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      #   with:
      #     registries: "337034319268"
      #     mask-password: "true"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup .netrc
        uses: conventional-actions/setup-netrc@v1
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ matrix.images.githubRegistry }}
            # ${{ steps.login-ecr.outputs.registry }}/${{ matrix.images.ecrRepository }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.draft-release.outputs.version-major }}
            type=raw,value=${{ needs.draft-release.outputs.version-minor }}
            type=raw,value=${{ needs.draft-release.outputs.version-patch }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}
      - name: Build docker image
        uses: docker/build-push-action@v5
        id: dockerbuild
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.images.dockerfile }}
          tags: ${{ matrix.images.localRegistry }}:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secret-files: |
            "netrc=/home/runner/.netrc"
      # - name: Run Snyk for linux/amd64
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}
      #   with:
      #     image: ${{ matrix.images.localRegistry }}:latest
      #     args: --file=${{ env.DOCKERFILE }} --severity-threshold=high --platform=linux/amd64
      # - name: Run Snyk for linux/arm64
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}
      #   with:
      #     image: ${{ matrix.images.localRegistry }}:latest
      #     args: --file=${{ env.DOCKERFILE }} --severity-threshold=high --platform=linux/arm64
      - name: Push docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64,linux/amd64
          file: ${{ matrix.images.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          secret-files: |
            "netrc=/home/runner/.netrc"

  release:
    name: Finalize release
    needs:
      - draft-release
      - build-push-go
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - name: Finalize release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: ${{ needs.draft-release.outputs.version }}
          name: ${{ needs.draft-release.outputs.version }}
          token: ${{ env.GITHUB_TOKEN }}

  # deploy:
  #   name: Deploy to UAT
  #   if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
  #   needs:
  #     - draft-release
  #     - release
  #   uses: ketch-com/crew/.github/workflows/uat.yml@main
  #   with:
  #     version: ${{ needs.draft-release.outputs.version-patch }}
  #     service: ketch-event-forwarder
  #   secrets:
  #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  #     GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
